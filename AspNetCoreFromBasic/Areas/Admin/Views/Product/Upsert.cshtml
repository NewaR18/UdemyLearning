@model AspNetCore.Models.ViewModel.ProductViewModel;
<form asp-controller="Product" asp-action="Upsert" method="post" enctype="multipart/form-data">
    <div asp-validation-summary="All"></div>
    <div class="row">
        <div class="col-10">
            <h2>@(Model.Product.Id == 0 ? "Create" : "Update") Product</h2>
            <hr />
            <div class="row">
                <div hidden>
                    <input asp-for="Product.Id" type="number" class="form-control" hidden />
                </div>
                <div class="p-1 col-12">
                    <label asp-for="Product.Title" class="form-label"></label>
                    <input asp-for="Product.Title" type="text" class="form-control" />
                    <span asp-validation-for="Product.Title" class="text-danger"></span>
                </div>
                <div class="p-1 col-12">
                    <label asp-for="Product.Description" class="form-label"></label>
                    <textarea asp-for="Product.Description" rows="3" type="text" class="form-control"></textarea>
                    <span asp-validation-for="Product.Description" class="text-danger"></span>
                </div>
                <div class="p-1 col-6">
                    <label asp-for="Product.ISBN" class="form-label"></label>
                    <input asp-for="Product.ISBN" type="text" class="form-control" />
                    <span asp-validation-for="Product.ISBN" class="text-danger"></span>
                </div>
                <div class="p-1 col-6">
                    <label asp-for="Product.Author" class="form-label"></label>
                    <input asp-for="Product.Author" type="text" class="form-control" />
                    <span asp-validation-for="Product.Author" class="text-danger"></span>
                </div>
                <div class="p-1 col-6">
                    <label asp-for="Product.ListPrice" class="form-label"></label>
                    <input asp-for="Product.ListPrice" type="number" class="form-control" />
                    <span asp-validation-for="Product.ListPrice" class="text-danger"></span>
                </div>
                <div class="p-1 col-6">
                    <label asp-for="Product.Price" class="form-label"></label>
                    <input asp-for="Product.Price" type="number" class="form-control" />
                    <span asp-validation-for="Product.Price" class="text-danger"></span>
                </div>
                <div class="p-1 col-6">
                    <label asp-for="Product.Price50" class="form-label"></label>
                    <input asp-for="Product.Price50" type="number" class="form-control" />
                    <span asp-validation-for="Product.Price50" class="text-danger"></span>
                </div>
                <div class="p-1 col-6">
                    <label asp-for="Product.Price100" class="form-label"></label>
                    <input asp-for="Product.Price100" type="number" class="form-control" />
                    <span asp-validation-for="Product.Price100" class="text-danger"></span>
                </div>
                <div class="p-1 col-12">
                    <label asp-for="Product.ImageURL" class="form-label"></label>
                    <input asp-for="Product.ImageURL" type="text" class="form-control" hidden>
                    <input type="file" id="imgBox" name="file" class="form-control" />
                </div>
                <div class="p-1 col-6">
                    <label asp-for="Product.CategoryId" class="form-label"></label>
                    <select asp-for="Product.CategoryId" asp-items="Model.CategoryList" class="form-select">
                        <option selected disabled>--Select Category--</option>
                    </select>
                    <span asp-validation-for="Product.CategoryId" class="text-danger"></span>
                </div>
                <div class="p-1 col-6">
                    <label asp-for="Product.CoverTypeId" class="form-label"></label>
                    <select asp-for="Product.CoverTypeId" asp-items="Model.CoverTypeList" class="form-select">
                        <option selected disabled>--Select CoverType--</option>
                    </select>
                    <span asp-validation-for="Product.CoverTypeId" class="text-danger"></span>
                </div>
                <div class="p-1 col-4">
                    @if (Model.Product.Id == 0)
                    {
                        <button type="submit" onclick="return ValidateImage()" class="form-control btn btn-primary">Create</button>
                    }
                    else
                    {
                        <button type="submit" class="form-control btn btn-primary">Update</button>
                    }
                </div>
            </div>
        </div>
        @if (Model.Product.ImageURL!=null)
        {
            <div class="col-2">
                <img src="@Model.Product.ImageURL" alt="profile" style="width: 192px; height:108px; border-radius:2px;" />
            </div>
        }
        
    </div>
</form>
@section Scripts{
    <partial name="_ValidationScriptsPartial" />
    <script>
        tinymce.init({
            selector: 'textarea',
            plugins: 'ai tinycomments mentions anchor autolink charmap codesample emoticons image link lists media searchreplace table visualblocks wordcount checklist mediaembed casechange export formatpainter pageembed permanentpen footnotes advtemplate advtable advcode editimage tableofcontents mergetags powerpaste tinymcespellchecker autocorrect a11ychecker typography inlinecss',
            toolbar: 'undo redo | blocks fontfamily fontsize | bold italic underline strikethrough | link image media table mergetags | align lineheight | tinycomments | checklist numlist bullist indent outdent | emoticons charmap | removeformat',
            tinycomments_mode: 'embedded',
            tinycomments_author: 'Author name',
            mergetags_list: [
                { value: 'First.Name', title: 'First Name' },
                { value: 'Email', title: 'Email' },
            ],
            ai_request: (request, respondWith) => respondWith.string(() => Promise.reject("See docs to implement AI Assistant")),
        });
    </script>
    <script>
        function ValidateImage(){
            if ($("#imgBox")[0].files.length === 0) {
                Swal.fire({
                  title: 'Error!',
                  text: 'No Image Present',
                  icon: 'error'
                })
                return false;
            }
            return true;
        }
    </script>
}